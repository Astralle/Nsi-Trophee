"""s'occupe de la coloration de l'IDE interne en définisant les couelurs de chaque mot-clée possible"""

from PyQt5.QtGui import QColor
from PyQt5.QtCore import QRegExp


VERT_BLEU = QColor(0, 240, 100) # types
ROUGE = QColor(255, 0, 0) # erreurs
ROUGE_FONCE = QColor(144, 12, 40) # mots clés
CYAN = QColor(28, 195, 173) # fonctions
VIOLET = QColor(186, 0, 245) # booléens et None
GRIS = QColor(153, 153, 153) # commentaires
BLEU_FONCE = QColor(38, 21, 232)
VERT = QColor(0, 197, 6)
BLEU_PASTEL = QColor(30, 95,164)
ORANGE = QColor(210, 100, 40) # strings et dostrings
VERT_POMME = QColor(37, 142, 0)
COULEURS = {"rouge" : ROUGE, "rouge_fonce" : ROUGE_FONCE, "cyan" : CYAN, "violet" : VIOLET, "gris" : GRIS, "bleu_fonce" : BLEU_FONCE,
            "vert" : VERT, "bleu_pastel" : BLEU_PASTEL, "orange" : ORANGE, "vert_pomme" : VERT_POMME, "vert_bleu" : VERT_BLEU}

HIGHLIGHTING_RULES : tuple[tuple[QRegExp, QColor, bool]] = (
                      (QRegExp("\\bfor\\b"), "rouge_fonce", True),
                      (QRegExp("\\bwhile\\b"), "rouge_fonce", True),
                      (QRegExp("\\bin\\b"), "rouge_fonce", True),
                      (QRegExp("\\bif\\b"), "rouge_fonce", True),
                      (QRegExp("\\belif\\b"), "rouge_fonce", True),
                      (QRegExp("\\belse\\b"), "rouge_fonce", True),
                      (QRegExp("\\bwith\\b"), "rouge_fonce", True),
                      (QRegExp("\\bas\\b"), "rouge_fonce", True),
                      (QRegExp("\\bis\\b"), "rouge_fonce", True),
                      (QRegExp("\\btry\\b"), "rouge_fonce", True),
                      (QRegExp("\\bexcept\\b"), "rouge_fonce", True),
                      (QRegExp("\\bdef\\b"), "bleu_fonce", True),
                      (QRegExp("\\breturn\\b"), "bleu_fonce", True),
                      (QRegExp("\\bdel\\b"), "bleu_fonce", True),
                      (QRegExp("\\bclass\\b"), "bleu_fonce", True),
                      (QRegExp("\\band\\b"), "vert", True),
                      (QRegExp("\\bor\\b"), "vert", True),
                      (QRegExp("\\bnot\\b"), "vert", True),
                      (QRegExp("\\bNone\\b"), "violet", False),
                      (QRegExp("\\bTrue\\b"), "violet", False),
                      (QRegExp("\\bFalse\\b"), "violet", False),
                      (QRegExp("\\brange\\b"), "cyan", False),
                      (QRegExp("\\blen\\b"), "cyan", False),
                      (QRegExp("\\bprint\\b"), "cyan", False),
                      (QRegExp("\\bsplit\\b"), "cyan", False),
                      (QRegExp("\\binsert\\b"), "cyan", False),
                      (QRegExp("\\bcount\\b"), "cyan", False),
                      (QRegExp("\\bremove\\b"), "cyan", False),
                      (QRegExp("\\bextend\\b"), "cyan", False),
                      (QRegExp("\\bappend\\b"), "cyan", False),
                      (QRegExp("\\bindex\\b"), "cyan", False),
                      (QRegExp("\\bclear\\b"), "cyan", False),
                      (QRegExp("\\bopen\\b"), "cyan", False),
                      (QRegExp("\\bclose\\b"), "cyan", False),
                      (QRegExp("\\bcopy\\b"), "cyan", False),
                      (QRegExp("\\bsort\\b"), "cyan", False),
                      (QRegExp("\\bpop\\b"), "cyan", False),
                      (QRegExp("\\breverse\\b"), "cyan", False),
                      (QRegExp("\\binput\\b"), "cyan", False),
                      (QRegExp("\\bzip\\b"), "cyan", False),
                      (QRegExp("\\bget\\b"), "cyan", False),
                      (QRegExp("\\babs\\b"), "cyan", False),
                      (QRegExp("\\ball\\b"), "cyan", False),
                      (QRegExp("\\bany\\b"), "cyan", False),
                      (QRegExp("\\bbin\\b"), "cyan", False),
                      (QRegExp("\\bcallable\\b"), "cyan", False),
                      (QRegExp("\\bcapitalize\\b"), "cyan", False),
                      (QRegExp("\\bisaplpha\\b"), "cyan", False),
                      (QRegExp("\\bchoice\\b"), "cyan", False),
                      (QRegExp("\\bendswith\\b"), "cyan", False),
                      (QRegExp("\\bstartswith\\b"), "cyan", False),
                      (QRegExp("\\bisdigit\\b"), "cyan", False),
                      (QRegExp("\\bisupper\\b"), "cyan", False),
                      (QRegExp("\\bislower\\b"), "cyan", False),
                      (QRegExp("\\bistitle\\b"), "cyan", False),
                      (QRegExp("\\bisspace\\b"), "cyan", False),
                      (QRegExp("\\blower\\b"), "cyan", False),
                      (QRegExp("\\bupper\\b"), "cyan", False),
                      (QRegExp("\\bfind\\b"), "cyan", False),
                      (QRegExp("\\bjoin\\b"), "cyan", False),
                      (QRegExp("\\blstrip\\b"), "cyan", False),
                      (QRegExp("\\brstrip\\b"), "cyan", False),
                      (QRegExp("\\bstrip\\b"), "cyan", False),
                      (QRegExp("\\bisdecimal\\b"), "cyan", False),
                      (QRegExp("\\bformat\\b"), "cyan", False),
                      (QRegExp("\\bmap\\b"), "cyan", False),
                      (QRegExp("\\benumerate\\b"), "cyan", False),
                      (QRegExp("\\bexec\\b"), "cyan", False),
                      (QRegExp("\\bchr\\b"), "cyan", False),
                      (QRegExp("\\bord\\b"), "cyan", False),
                      (QRegExp("\\bint\\b"), "vert_bleu", False),
                      (QRegExp("\\bstr\\b"), "vert_bleu", False),
                      (QRegExp("\\btype\\b"), "vert_bleu", False),
                      (QRegExp("\\bcomplex\\b"), "vert_bleu", False),
                      (QRegExp("\\bbool\\b"), "vert_bleu", False),
                      (QRegExp("\\btuple\\b"), "vert_bleu", False),
                      (QRegExp("\\bset\\b"), "vert_bleu", False),
                      (QRegExp("\\bfloat\\b"), "vert_bleu", False),
                      (QRegExp("\\blist\\b"), "vert_bleu", False),
                      (QRegExp("\\bdict\\b"), "vert_bleu", False),
                      (QRegExp("[=-\*\+/%]"), "gris", False),
                      (QRegExp("[0-9]+j?"), "bleu_pastel", False),
                      (QRegExp("[0-9]_[0-9]"), "bleu_pastel", False),
                      (QRegExp("=="), "gris", False),
                      (QRegExp("<="), "gris", False),
                      (QRegExp(">="), "gris", False),
                      (QRegExp(">"), "gris", False),
                      (QRegExp("<"), "gris", False),
                      (QRegExp("!="), "gris", False),
                      (QRegExp("\[|\]|\(|\)|\{|\}"), "vert_pomme", False),
                      (QRegExp("={3,}|[-+*%]{2,}|/{3,}"), "rouge", False),  # à partir d'ici, il s'agit d'erreurs
                      (QRegExp("=[<>!-*+\\\/%]+"), "rouge", False),
                      (QRegExp("[<>!-*+\\\%]{2,}="), "rouge", False),
                      (QRegExp("/{3,}="), "rouge", False),
                      (QRegExp("[<>!/%-+*\]+=="), "rouge", False),
                      (QRegExp("(?![a-zA-Z])\\d+[a-ik-zA-Z][a-zA-Z]"), "rouge", False),
                      (QRegExp("(?![a-zA-Z])\\d+j[a-zA-Z]+"), "rouge", False),
                      (QRegExp("(\([^)\"']*(\]|\}))|((\[|\{)[^(\"']*\))"), "rouge", False),
                      (QRegExp("(\[[^\]\"']*\})|(\{[^\[\"']*\])"), "rouge", False),
                      (QRegExp("\\brange\\b\( *\)"), "rouge", False),
                      (QRegExp("(?\\bdef\\b)[^\\r\\n:]*(\\n|\\r)"), "rouge", False),
                      (QRegExp("^(([^\(\)]*\([^\(\)]*\)[^\(\)]*)*\(([^\(\)]*\([^\(\)]*\)[^\(\)]*)*$"), "rouge", False),
                      (QRegExp("\"[^\"]*\""), "orange", False),             # sauf ces deux dernières expressions
                      (QRegExp("\'[^\']*\'"), "orange", False),             # qui gèrent la coloration des strings
                      (QRegExp("\"\"\".*\"\"\""), "orange", False),         # et des commentaires
                      (QRegExp("#[^\\n]*"),"gris", False),
                      )

HIGHLIGHTING_NIVEAU = {
    1 : QRegExp("\\b(est_creature)\\b"),
    2 : QRegExp("\\b(evaluation_gobelin)\\b"),
    3 : QRegExp("\\b(pierre_cassable)\\b"),
    4 : QRegExp("\\b(trouver_squelette)\\b"),
    5 : QRegExp("\\b(inverse_dialogue)\\b"),
    6 : QRegExp("\\b(araignee_euler)\\b"),
    7 : QRegExp("\\b(est_pangramme)\\b"),
    8 : QRegExp("\\b(mystere)\\b"),
    9 : QRegExp("\\b(decrypte_cesar)\\b"),
    10 : QRegExp("\\b(passage_possible)\\b"),
    11 : QRegExp("\\b(nombre_riposte)\\b"),
    12 : QRegExp("\\b(bloque_anagramme)\\b"),
    13 : QRegExp("\\b(echo_palindrome)\\b"),
    14 : QRegExp("\\b(melange)\\b"),
    15 : QRegExp("\\b(est_fibonacci)\\b"),
    16 : QRegExp("\\b(retourne_sort)\\b"),
    17 :QRegExp("\\b(crie_e)\\b"),
    18 :QRegExp("\\b(change_ordre)\\b"),
}